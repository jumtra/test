{
    // Remote
    "remote.SSH.remotePlatform": {
    },
    //========================================================================
    // vscodeのeditorの設定
    //========================================================================
    "editor.fontSize": 13.5, //fontsize
    "editor.wordWrap": "on", //1行長くならないように
    "editor.lineHeight": 0, //1行の高さ
    "editor.renderLineHighlight": "all", //現在の行番号含めて強調表示する
    "editor.minimap.enabled": false, //minimap削除
    "editor.insertSpaces": true, //tabをスペースとして扱う
    "editor.tabSize": 4, //tabをデフォルトで4にする
    "editor.renderWhitespace": "boundary", //エディタ上での空白表示設定
    "editor.renderControlCharacters": true, //制御文字の表示
    "editor.cursorBlinking": "smooth", //カーソルの点滅をヌルヌルにする
    "editor.autoIndent": "full", //autoindentを入れる
    "editor.fontFamily": "Cica,Consolas, 'Courier New', monospace", //font settings
    "extensions.autoUpdate": true, //プラグインを自動アップデート
    "editor.autoClosingBrackets": "beforeWhitespace",
    "editor.autoClosingQuotes": "beforeWhitespace", //パンクズリストはそんなに使わないし非表示
    "editor.detectIndentation": false, //indent設定はファイル設定ではなく、自分の設定を優先する
    //zen mode settings
    "zenMode.fullScreen": true,
    "zenMode.centerLayout": true,
    "zenMode.hideActivityBar": true,
    "zenMode.hideLineNumbers": false,
    "zenMode.showTabs": "multiple",
    "zenMode.silentNotifications": true,
    "zenMode.hideStatusBar": true,
    "zenMode.restore": false,
    //サジェスチョン
    "editor.quickSuggestionsDelay": 400, //入力補完の検出タイミング
    // "editor.quickSuggestions":false,
    "editor.quickSuggestions": { //入力補完を自動で表示する 
        "other": true, //文字列以外
        "strings": false, //文字列
        "comments": false, //コメント
    },
    "editor.tokenColorCustomizations": {
        "comments": {
            "foreground": "#7f9ea0", //コメントの色
            "fontStyle": "",
        },
        "functions": {
            "fontStyle": "underline",
        },
    },
    //encodings
    "files.autoGuessEncoding": true, // 有効な場合、ファイルを開くときに文字セット エンコードを推測します。言語ごとに構成することも可能
    "files.autoSave": "off", //ダーティファイルの作成を無効化
    "files.eol": "auto", //既定の改行文字をautoにする
    //----------------------------------------------------------
    // vscodeのバージョン管理系
    //----------------------------------------------------------
    // ソース管理プロバイダーのセクションを常に表示するかどうか。
    "scm.alwaysShowActions": true,
    //----------------------------------------------------------
    // vscodeの作業環境の設定(おもにタブの設定をvimと近づけるために設定)
    //----------------------------------------------------------
    "workbench.editor.labelFormat": "short",
    "workbench.editor.revealIfOpen": true,
    "workbench.editor.showIcons": true,
    "workbench.editor.highlightModifiedTabs": true,
    "workbench.editor.tabCloseButton": "left",
    "workbench.startupEditor": "none",
    "workbench.editor.openPositioning": "last",
    "explorer.openEditors.visible": 1,
    // エクスプローラーから非表示にするファイル
    "files.exclude": {
        "tags": true,
        "**/.svn": true,
        "**/.git": true,
        "**/.DS_Store": true
    },
    // ファイル監視から除外するファイル
    "files.watcherExclude": {
        "**/.git/objects/**": true,
        "**/.git/subtree-cache/**": true,
        "**/node_modules/*/**": true,
        "**/.svn/**": true,
    },
    // ファイルブラウザには表示するが、検索から除外する
    "search.exclude": {
        "**/node_modules": true,
        "**/bower_components": true,
        "**/tmp/cache": true,
        "tags": true,
        "**/.svn": true,
    },
    //----------------------------------------------------------
    // vscodeのdebugの設定
    //----------------------------------------------------------
    "debug.inlineValues": "auto",
    "window.newWindowDimensions": "default",
    "workbench.tips.enabled": false,
    //"C_Cpp.updateChannel": "Insiders",
    //vscode sync
    "sync.forceDownload": false,
    "sync.quietSync": false,
    "sync.askGistName": false,
    "sync.removeExtensions": true,
    "sync.syncExtensions": true,
    "sync.autoDownload": false,
    "sync.autoUpload": false,
    // ワークベンチ設定
    "workbench.editor.showTabs": "multiple",
    "workbench.editor.enablePreview": false, //毎回新規で開く
    "workbench.editor.enablePreviewFromQuickOpen": false, //毎回新規で開く
    "workbench.activityBar.location": "default", // アクティビティバー(左端)を非表示に"workbench.editor.tabSizing": "shrink", // タブが多い場合,文字を非表示にしてもタブ表示を優先する
    "workbench.statusBar.visible": true, // ステータスバー(下端)を表示
    "workbench.sideBar.location": "left", // サイドバーを左に
    "workbench.colorTheme": "One Dark Pro",
    "workbench.colorCustomizations": {
        "editor.lineHighlightBackground": "#002255", //現在の行の背景色
        "editor.selectionBackground": "#31ca4a77", //選択業の背景
        "editor.selectionHighlightBorder": "#00e1ff", //線学業の前背景
        "editorError.border": "#ff0000", //エラーの下線の色
        "tab.activeBorder": "#ffffff", //アクティブなタブの色
        "tab.inactiveForeground": "#999999", //アクティブでないタブの色
        "editorSuggestWidget.selectedBackground": "#4792b4", //選択しているサジェストの背景色
        "editorSuggestWidget.foreground": "#f1efef", //選択しているサジェストの文字色
        "editorWhitespace.foreground": "#8a8888", //tab等の制御文字
    },
    // クラッシュレポートを送信しない
    "telemetry.telemetryLevel": "off",
    //========================================================================
    //markdown settings
    //========================================================================
    "markdown.preview.breaks": true,
    //========================================================================
    //言語毎の設定
    //========================================================================
    //C関係の設定は社内の設定に合わせる
    "[c]": {
        "editor.tabSize": 4,
        "editor.insertSpaces": false,
    },
    "[cpp]": {
        "editor.tabSize": 4,
        "editor.insertSpaces": false,
    },
    "[markdown]": {
        "editor.tabSize": 2, //タブサイズの設定
        "editor.quickSuggestions": {
            "other": "on",
            "comments": "on",
            "strings": "on"
        },
        "editor.quickSuggestionsDelay": 0, //サジェスチョンのディレイ
    },
    "[json]": {
        "editor.tabSize": 2,
    },
    //========================================================================
    //plugin settings
    //========================================================================
    // scrolloff
    "scrolloff.alwaysCenter": false,
    "scrolloff.scrolloff": 9,
    //comment-divider
    "comment-divider.mainHeaderTransform": "titlecase", //先頭を大文字にする。
    "comment-divider.subheaderTransform": "titlecase", //先頭を大文字にする。
    //テキスト校正君
    "japanese-proofreading.textlint.丸かっこ（）": false, //半角カッコを指摘する
    "japanese-proofreading.textlint.疑問符(？)": false, //疑問符の後に全角スペースが入っているかを指摘する
    "japanese-proofreading.textlint.かっこ類と隣接する文字の間のスペースの有無": false, //カッコの内側と外側にスペースを入れていないかを指摘する
    "japanese-proofreading.textlint.全角文字と半角文字の間": false, //全角文字と半角文字の間にスペースを入れていないかを指摘する
    "japanese-proofreading.textlint.全角文字どうし": false, //全角文字同市の間にスペースを入れていないか指摘する
    //multiCommand
    "multiCommand.commands": [
        {
            //     //preview画面から戻す
            //   "command": "multiCommand.previewMarkdownAndUnfocus",
            //   "sequence": [
            //     "workbench.action.closeActiveEditor",               //一旦閉じる
            //     "markdown-preview-enhanced.openPreviewToTheSide",   //再度開き直す
            //   ],
        },
    ],
    //========================================================================
    //VIM
    //========================================================================
    "vim.statusBarColorControl": false, //statusbarの色のコントロールをしない
    "vim.highlightedyank.enable": true, //yankした箇所をハイライト表示にする
    "vim.highlightedyank.color": "rgba(0, 240, 170, 0.5)", //yankした時の色
    "vim.highlightedyank.duration": 150, //yankした時の色の表示時間
    "vim.leader": "<space>", //Map Leaderの設定
    "vim.autoindent": true, //autoindent
    "vim.useSystemClipboard": true, //system clipboardと同期する
    "vim.hlsearch": true, //hlserch
    "vim.visualstar": true, //カーソル上にあるワードを"*"で検索
    "vim.useCtrlKeys": true, //諸々のctrlキーを使った操作が有効になる
    "vim.debug.silent": true, //アラートを出さない
    "vim.timeout": 1200, //入力のタイムアウト時間
    // vim plugin有効化
    "vim.easymotion": true, //easy motionを有効化
    "vim.surround": true, //surroundを有効にする
    //easy motion
    "vim.easymotionMarkerForegroundColorOneChar": "rgba(0,240,170,0.9)", //一文字目の色
    "vim.easymotionMarkerForegroundColorTwoCharFirst": "rgba(0,240,170,0.9)", //二文字目の色
    "vim.easymotionMarkerBackgroundColor": "", //背景色
    "vim.easymotionMarkerWidthPerChar": 19, //各文字に割り当てられている幅
    "vim.easymotionMarkerHeight": 0, //マーカーの高さ
    "vim.easymotionMarkerFontFamily": "Cica", //フォント
    "vim.easymotionMarkerFontSize": "12.5", //フォントサイズ
    "vim.easymotionMarkerFontWeight": "normal", //フォントの太さ
    "vim.easymotionKeys": "asdfhjklwqeruioopghty;", //マーカーに使用される文字列
    "vim.easymotionMarkerYOffset": 13.5, //高さのずれ修正
    //================================================================================================================
    //key map for vim
    //keybinding.jsonと違いキーの組み合わせで処理待ちが発生しない
    //keyのデフォルトキーを使い,キー操作を定義したくても
    //デフォルトのコマンドが有効になる。(例えば、sh→0にしたくてもsのコマンドが有効になっている)
    //Leaderキーを入力後のコマンドは無視されているので、極力Leaderを活用するようにする。
    //beforeは必ず定義しなければならないが、afterまたはcommandsでコマンドを呼び出せる。whenによる操作も可能っぽい
    //================================================================================================================
    //nmap
    "vim.normalModeKeyBindings": [
        // {"before": ["s"],"after"               : [""]},                                             //unmap?
    ],
    //nnoremap
    "vim.normalModeKeyBindingsNonRecursive": [
        {
            "before": [
                "J"
            ],
            "after": [
                "1",
                "0",
                "j"
            ]
        }, //移動を早める
        {
            "before": [
                "K"
            ],
            "after": [
                "1",
                "0",
                "k"
            ]
        }, //移動を早める
        {
            "before": [
                "H"
            ],
            "after": [
                "0"
            ]
        }, //端に移動
        {
            "before": [
                "L"
            ],
            "after": [
                "$"
            ]
        }, //端に移動
        {
            "before": [
                "<Leader>",
                "h"
            ],
            "after": [
                "<C-w>",
                "h"
            ]
        }, //window移動
        {
            "before": [
                "<Leader>",
                "j"
            ],
            "after": [
                "<C-w>",
                "j"
            ]
        }, //window移動
        {
            "before": [
                "<Leader>",
                "k"
            ],
            "after": [
                "<C-w>",
                "k"
            ]
        }, //window移動
        {
            "before": [
                "<Leader>",
                "l"
            ],
            "after": [
                "<C-w>",
                "l"
            ]
        }, //window移動
        {
            "before": [
                "]"
            ],
            "commands": [
                {
                    "command": "C_Cpp.PeekDeclaration"
                }
            ],
            "when": [
                "editorLangId == c"
            ]
        }, //宣言を見る c専用
        {
            "before": [
                "["
            ],
            "commands": [
                {
                    "command": "editor.action.peekDefinition"
                }
            ]
        }, //定義を見る
        {
            "before": [
                "<Leader>",
                "s"
            ],
            "commands": [
                ":split"
            ]
        }, //水平に開く
        {
            "before": [
                "<Leader>",
                "v"
            ],
            "commands": [
                ":vsplit"
            ]
        }, //水平にを閉じる
        {
            "before": [
                ">"
            ],
            "commands": [
                "editor.action.indentLines"
            ]
        }, //インデント調整(repeat可能)
        {
            "before": [
                "<"
            ],
            "commands": [
                "editor.action.outdentLines"
            ]
        }, //インデント調整(repeat可能)
        {
            "before": [
                "<Leader>",
                "u"
            ],
            "after": [
                "g",
                "t"
            ]
        }, //tab移動
        {
            "before": [
                "<Leader>",
                "y"
            ],
            "after": [
                "g",
                "T"
            ]
        }, //tab移動
        {
            "before": [
                "<Leader>",
                "x"
            ],
            "commands": [
                ":q!"
            ]
        }, //tabを閉じる
        {
            "before": [
                "<Leader>",
                "q"
            ],
            "commands": [
                ":qa!"
            ]
        }, //すべてを閉じる
        {
            "before": [
                "<Leader>",
                "w"
            ],
            "commands": [
                ":wa"
            ]
        }, //すべてを保存
        {
            "before": [
                "<Leader>",
                "o"
            ],
            "after": [
                "o",
                "<ESC>"
            ]
        }, //空の行を挿入
        {
            "before": [
                "<Leader>",
                "O"
            ],
            "after": [
                "O",
                "<ESC>"
            ]
        }, //空の行を挿入
        {
            "before": [
                "<Leader>",
                "c"
            ],
            "commands": [
                {
                    "command": "editor.action.commentLine"
                }
            ]
        }, //コメント
        {
            "before": [
                "<Leader>",
                ":"
            ],
            "commands": [
                {
                    "command": "workbench.action.showCommands"
                }
            ]
        }, //コマンドパレット
        {
            "before": [
                "<Leader>",
                ";"
            ],
            "commands": [
                {
                    "command": "workbench.action.quickOpen"
                }
            ]
        }, //ファイル検索
        {
            "before": [
                "<CR>"
            ],
            "after": [
                "G"
            ]
        }, //最終行へ
        {
            "before": [
                "<BS>"
            ],
            "after": [
                "g",
                "g"
            ]
        }, //先頭行へ
        // 検索結果を画面中央に
        {
            "before": [
                "n"
            ],
            "after": [
                "n",
                "z",
                "z"
            ]
        },
        {
            "before": [
                "N"
            ],
            "after": [
                "N",
                "z",
                "z"
            ]
        },
        {
            "before": [
                "*"
            ],
            "after": [
                "*",
                "z",
                "z"
            ]
        },
        {
            "before": [
                "#"
            ],
            "after": [
                "#",
                "z",
                "z"
            ]
        },
        //Surround
        {
            "before": [
                "s"
            ],
            "after": [
                "y",
                "s"
            ]
        }, //surround add
        //easy motion
        {
            "before": [
                "f"
            ],
            "after": [
                "<Leader>",
                "<Leader>",
                "2",
                "s"
            ]
        }, //easymotion 2s
        //Multi-Cursor Mode
        //prefix Ctrl 
        {
            "before": [
                "<C-n>",
            ],
            "after": [
                "g",
                "b"
            ]
        }, //選択した文字に対して増やす    
        {
            "before": [
                "<C-k>",
            ],
            "commands": [
                {
                    "command": "editor.action.insertCursorAbove"
                }
            ]
        }, //シンボルをリネーム(mulchipulcursor)   
        {
            "before": [
                "<C-j>",
            ],
            "commands": [
                {
                    "command": "editor.action.insertCursorBelow"
                }
            ]
        }, //シンボルをリネーム(mulchipulcursor)   
        //外部プラグイン呼び出し
        {
            "before": [
                "<Leader>",
                "@"
            ],
            "commands": [
                {
                    "command": "markdown-preview-enhanced.openPreviewToTheSide"
                }
            ]
        }, //markdownで開く
    ],
    //insert mode
    "vim.insertModeKeyBindings": [
        {
            "before": [
                "j",
                "j"
            ],
            "after": [
                "<Esc>"
            ]
        }, //jjでノーマルモードに戻る
        {
            "before": [
                ";",
                ";"
            ],
            "commands": [
                "editor.action.triggerSuggest"
            ]
        }, //;;でサジェストの起動に使う
        {
            "before": [
                "v",
                "L"
            ],
            "after": [
                "$",
                "h"
            ]
        }, //端に移動
        // {"before": ["<C-h>"],"after"    : ["0"]},                                                     //端に移動
        // {"before": ["<C-l>"],"after"    : ["$","h"]},                                                 //端に移動
    ],
    // Visual Mode
    "vim.visualModeKeyBindingsNonRecursive": [
        //vを押した直後はvのコマンドが残っているので注意
        //visualmode後にすぐ実行したいものは、二重で定義する。
        {
            "before": [
                "J"
            ],
            "after": [
                "1",
                "0",
                "j"
            ]
        }, //移動を早める
        {
            "before": [
                "v",
                "J"
            ],
            "after": [
                "1",
                "0",
                "j"
            ]
        }, //移動を早める
        {
            "before": [
                "K"
            ],
            "after": [
                "1",
                "0",
                "k"
            ]
        }, //移動を早める
        {
            "before": [
                "v",
                "K"
            ],
            "after": [
                "1",
                "0",
                "k"
            ]
        }, //移動を早める
        {
            "before": [
                "v"
            ],
            "after": [
                "a",
                "f"
            ]
        }, //拡大選択
        {
            "before": [
                "v",
                "v"
            ],
            "after": [
                "a",
                "f"
            ]
        }, //拡大選択
        {
            "before": [
                "H"
            ],
            "after": [
                "0"
            ]
        }, //端に移動
        {
            "before": [
                "L"
            ],
            "after": [
                "$",
                "h"
            ]
        }, //端に移動
        {
            "before": [
                "v",
                "H"
            ],
            "after": [
                "0"
            ]
        }, //端に移動
        {
            "before": [
                "v",
                "L"
            ],
            "after": [
                "$",
                "h"
            ]
        }, //端に移動
        {
            "before": [
                ">"
            ],
            "commands": [
                "editor.action.indentLines"
            ]
        }, //インデント調整(repeat可能)
        {
            "before": [
                "<"
            ],
            "commands": [
                "editor.action.outdentLines"
            ]
        }, //インデント調整(repeat可能)
        {
            "before": [
                "<Leader>",
                ":"
            ],
            "commands": [
                {
                    "command": "workbench.action.showCommands"
                }
            ]
        }, //コマンドパレット
        {
            "before": [
                "<Leader>",
                ";"
            ],
            "commands": [
                {
                    "command": "workbench.action.quickOpen"
                }
            ]
        }, //ファイル検索
        {
            "before": [
                "<Leader>",
                "c"
            ],
            "commands": [
                {
                    "command": "editor.action.commentLine"
                }
            ]
        }, //コメント
        //Multi-Cursor Mode
        {
            "before": [
                "<C-n>"
            ],
            "after": [
                "g",
                "b"
            ]
        }, //選択した文字に対して増やす 
        {
            "before": [
                "<C-l>",
            ],
            "commands": [
                {
                    "command": "editor.action.insertCursorAtEndOfEachLineSelected"
                }
            ]
        }, //行末尾にカーソルを出す
        //外部プラグイン呼び出し
        {
            "before": [
                "<Leader>",
                "b"
            ],
            "commands": [
                {
                    "command": "alignment.align"
                }
            ]
        }, //揃える
        {
            "before": [
                "<Leader>",
                "v"
            ],
            "commands": [
                {
                    "command": "extension.commentaligner"
                }
            ]
        } //コメントを揃える
    ],
    //vimではなくvscode側のキーを有効にする
    "vim.handleKeys": {
        "<C-a>": false, //全選択
        "<C-f>": false, //検索
        "<C-h>": false //置換
    },
    //========================================================================
    //UI変更で自動で挿入されるやつ
    //========================================================================
    "redhat.telemetry.enabled": true,
    "githubPullRequests.queries": [
        {
            "label": "自分のレビュー待ち",
            "query": "is:open review-requested:${user}"
        },
        {
            "label": "自分に割り当て済み",
            "query": "is:open assignee:${user}"
        },
        {
            "label": "自分が作成",
            "query": "is:open author:${user}"
        }
    ],
    "files.associations": {
        "*.rmd": "markdown"
    },
    "window.menuBarVisibility": "compact",
    "cSpell.ignoreRegExpList": [
        "[０-９Ａ-Ｚａ-ｚぁ-んァ-ヶ亜-熙纊-黑]+"
    ],
    //========================================================================
    // pythonの設定
    //========================================================================
    "[python]": {
        // Auto format save
        "editor.formatOnSave": true,
        "editor.formatOnType": true,
        "editor.formatOnPaste": true,
        "editor.formatOnSaveMode": "file",
        "editor.quickSuggestions": {
            "other": "on",
            "comments": "on",
            "strings": "off"
        },
        "editor.defaultFormatter": "charliermarsh.ruff" //"ms-python.black-formatter",
    },
    //Pylance
    "python.languageServer": "Pylance",
    "python.analysis.typeCheckingMode": "basic",
    // "python.analysis.stubPath": "./typings",
    "python.analysis.autoImportCompletions": false,
    //"python.analysis.inlayHints.variableTypes": true,
    //"python.analysis.inlayHints.functionReturnTypes": true,
    //"python.analysis.inlayHints.callArgumentNames": "partial",
    //"python.analysis.inlayHints.pytestParameters": true,
    //"python.analysis.autoFormatStrings": true,
    // Linter としての細かいカスタマイズ部分です。
    "python.analysis.diagnosticSeverityOverrides": {
        // 未使用のインポート文の扱い。
        // デフォルトでもちゃんと薄暗いフォントに変わるので無効化でいいと判断。
        "reportUnusedImport": "none",
        // 未使用のクラス。同上。
        "reportUnusedClass": "none",
        // 未使用の関数。同上。
        "reportUnusedFunction": "none",
        // 条件分岐などでバウンドされていない可能性のある変数の扱い。
        // デフォルトでは警告止まりですが、これはエラー扱いに変更。
        "reportUnboundVariable": "error",
        // 外部モジュールの実体が見つけられないときの扱い。
        // ここを information にしていることについては後述します。
        "reportMissingModuleSource": "information",
        // 外部モジュールの型定義ファイルが見つけられないときの扱い。
        // ちなみに TypeStubs が型定義ファイルのことです（.pyi）。
        "reportMissingTypeStubs": "information",
        // 正規表現パターン内などで raw 文字列を使わずにスラッシュを直書き
        // しているときの扱い。デフォルトは警告されるが、個人的な趣味でレベル下げ。
        "reportInvalidStringEscapeSequence": "information",
        // total=False な TypedDict の変数にアクセスしようとしたときの扱い。
        // デフォルトは忘れましたが警告を出させるようにしました。
        // （パッケージによってはしんどいシーンがあるの xで調整をおすすめします）
        "reportTypedDictNotRequiredAccess": "warning",
        "reportGeneralTypeIssues": "none"
    },
    "python.autoComplete.extraPaths": [],
    "python.analysis.extraPaths": [],
    // Python Formatting
    "editor.defaultFormatter": "ms-python.python",
    "editor.codeActionsOnSave": {
        "source.organizeImports": "explicit"
    },
    //flake8
    //"flake8.importStrategy": "fromEnvironment",
    //"flake8.path": [
    //    "bin/pflake8"
    //],

    // Ruff
    "ruff.format.args": [
        "--config=ruff.toml"
    ],
    "ruff.lint.args": ["--config=ruff.toml"], // ruff checkに渡す追加のコマンドライン引数。設定ファイル(ruff.tomlなど)より優先される
    "ruff.path": [], // ruffの実行パス
    "ruff.interpreter": [], // pythonの実行パス
    "ruff.importStrategy": "fromEnvironment", // "fromEnvironment": 環境にruffがインストールされている場合は、そちらを使う。 "useBundled": Extension付属のruffを使う。
    "ruff.lint.run": "onType", // "onType": 入力度にruffを実行。 "onSave":保存時にruffを実行。
    "ruff.enable": true, // ruffを有効にするか否か。
    "ruff.organizeImports": true, // source.organizeImports を実行するのにruffを使用するか否か。
    "ruff.fixAll": true, // source.fixAll を実行するのにruffを使用するか否か。
    "ruff.codeAction.fixViolation": { // Quick Fix を表示するか否か。
        "enable": true
    },
    "ruff.codeAction.disableRuleComment": { // # nopa でQuick Fixを無視するか否か。
        "enable": true
    },
    "ruff.showNotifications": "always", // ruffの通知を表示するか否か。 "off", "onError", "onWarning", "always"
    "ruff.trace.server": "off", // "off", "message", "verbose"
    //mypy
    "mypy-type-checker.importStrategy": "fromEnvironment",
    "mypy-type-checker.args": [
        "--config-file",
        "pyproject.toml"
    ],
    // Black
    "Python_Config.formattingTool": "black",
    "black-formatter.importStrategy": "fromEnvironment",
    "black-formatter.args": [
        "--config",
        "pyproject.toml"
    ],
    // isort
    "isort.check": true,
    "isort.importStrategy": "fromEnvironment",
    "isort.args": [
        "--settings-path",
        "pyproject.toml"
    ],
    // pytest
    "python.testing.pytestArgs": [
        "."
    ],
    "python.testing.unittestEnabled": false,
    "python.testing.pytestEnabled": true,
    "files.defaultLanguage": "python",
    "errorLens.excludeBySource": [
        "mypy(error)"
    ],
    "editor.unicodeHighlight.ambiguousCharacters": false,
    "cSpell.userWords": [
        "applymap",
        "arange",
        "astype",
        "autoindent",
        "BLEU",
        "borderaxespad",
        "brainpad",
        "Cica",
        "cloudbuild",
        "cloudfunctions",
        "cloudrun",
        "cloudtasks",
        "commentaligner",
        "Consolas",
        "dataobjects",
        "deberta",
        "downsample",
        "dropna",
        "easymotion",
        "Eventarc",
        "eventdeveloper",
        "eventreceiver",
        "figsize",
        "fillna",
        "finetuning",
        "fontsize",
        "gcloud",
        "gcsaccount",
        "gelu",
        "generativeai",
        "ggplot",
        "googleapis",
        "hoge",
        "huggingface",
        "IELTS",
        "iloc",
        "imwrite",
        "INCMTYPE",
        "isin",
        "isort",
        "itertuples",
        "joblib",
        "jobposting",
        "jsonschema",
        "jumpei",
        "kaggle",
        "levelname",
        "linestyles",
        "linewidth",
        "logwriter",
        "LSTM",
        "mlflow",
        "mlruns",
        "modelmodule",
        "mypy",
        "ndarray",
        "neologdn",
        "ngram",
        "nheads",
        "noeval",
        "nxbt",
        "OIDC",
        "omegaconf",
        "oneline",
        "openai",
        "openpyxl",
        "outdent",
        "pctchange",
        "pflake",
        "postprocess",
        "preds",
        "preprocess",
        "probs",
        "pubsubpublisher",
        "Pylance",
        "pypoetry",
        "pyproject",
        "pytest",
        "ranchantan",
        "randn",
        "runadmin",
        "savez",
        "servicenetworking",
        "sheetnames",
        "softmax",
        "strerror",
        "TOEIC",
        "tqdm",
        "uchida",
        "Unet",
        "unsqueeze",
        "vertexai",
        "vlines",
        "wandb",
        "workflowsinvoker",
        "xformer",
        "xsmall"
    ],
    //"yaml.schemas": {
    //    "/schemas/pipelines-schema.json": "bitbucket-pipelines.yml"
    //},
    //"atlascode.bitbucket.enabled": true,
    //"atlascode.jira.jqlList": [
    //    {
    //        "id": "",
    //        "enabled": true,
    //        "name": "My brainpad Issues",
    //        "query": "assignee = currentUser() AND resolution = Unresolved ORDER BY lastViewed DESC",
    //        "siteId": "",
    //        "monitor": true
    //    }
    //],
    "workbench.editor.tabActionLocation": "left",
    "editor.formatOnPaste": true,
    "editor.formatOnSave": true,
    "notebook.formatOnCellExecution": true,
    "notebook.formatOnSave.enabled": true,
    "window.zoomLevel": 1,
    "hediet.vscode-drawio.resizeImages": null,
    "editor.lineNumbers": "on",
    "githubPullRequests.pullBranch": "never",
    "git.ignoreRebaseWarning": true
}